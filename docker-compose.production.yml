services:
  petclinic-app:
    image: petclinic-artifact  # the name of my existing docker image
    container_name: petclinic-app
    ports:
      - "8082:8080"
    environment:
      # This tells the Spring application to use the profile, which loads MySQL-specific configuration
      - SPRING_PROFILES_ACTIVE=mysql 
      # Mysql url 
      - SPRING_DATASOURCE_URL=jdbc:mysql://petclinic-db:3306/petclinic?useSSL=false  
      - SPRING_DATASOURCE_USERNAME=${DB_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${DB_PASSWORD}
    depends_on:
      petclinic-db:
        condition: service_healthy

  petclinic-db:
    image: mysql:8.0
    container_name: petclinic-db
    ports:
      - "3306:3306"
    environment:
      - MYSQL_DATABASE=petclinic
      - MYSQL_USER=${DB_USERNAME}
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
    volumes:
      - mysql-data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u${DB_USERNAME}", "-p${DB_PASSWORD}"]
      interval: 5s
      timeout: 5s
      retries: 20

volumes:
  mysql-data: